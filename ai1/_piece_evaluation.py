import chess

KNIGHT = ( 0, 10, 20, 20, 20, 10, 10,  0,
          10, 24, 26, 26, 26, 24, 24, 10,
          10, 28, 40, 50, 50, 28, 28, 10,
          10, 23, 36, 40, 40, 23, 23, 10,  
          10, 22, 28, 30, 30, 22, 22, 10,  
           0, 26, 26, 30, 30, 26, 26,  0,  
           5, 20, 20, 23, 20, 20, 20,  5,  
           0,  5, 15, 15, 15, 15,  0,  0,)

BISHOP = (0, 20, 20, 20, 20, 20, 20,  0,
         20, 40, 40, 40, 40, 40, 40, 20,
         20, 40, 50, 60, 60, 50, 40, 20,
         20, 50, 50, 60, 60, 50, 50, 20,
         20, 40, 60, 60, 60, 60, 40, 20,
         20, 60, 60, 60, 60, 60, 60, 20,
         20, 50, 40, 40, 40, 40, 50, 20,
          0, 20, 20, 20, 20, 20, 20, 0,)

ROOK = (25, 25, 25, 25, 25, 25, 25, 25,
        50, 75, 75, 75, 75, 75, 75, 50,
         0, 25, 25, 25, 25, 25, 25,  0,
         0, 25, 25, 25, 25, 25, 25,  0,
         0, 25, 25, 25, 25, 25, 25,  0,
         0, 25, 25, 25, 25, 25, 25,  0,
         0, 25, 25, 25, 25, 25, 25,  0,
        25, 25, 25, 50, 50, 25, 25, 25,)

QUEEN = ( 0, 20, 20, 30, 30, 20, 20,  0,
         20, 40, 40, 40, 40, 40, 40, 20,
         20, 40, 50, 50, 50, 50, 40, 20,
         30, 40, 50, 50, 50, 50, 40, 30,
         40, 40, 50, 50, 50, 50, 40, 30,
         20, 50, 50, 50, 50, 50, 40, 20,
         20, 40, 50, 40, 40, 40, 40, 20,
          0, 20, 20, 30, 30, 20, 20,  0,)

PAWN = (80, 80, 80, 80, 80, 80, 80, 80,
        70, 70, 70, 70, 70, 70, 70, 70,
        30, 30, 40, 50, 50, 40, 30, 30,
        25, 25, 30, 45, 45, 30, 25, 25,
        20, 20, 20, 40, 40, 20, 20, 20,
        25, 15, 10, 20, 20, 10, 15, 25,
        25, 30, 30,  0,  0, 30, 30, 25,
        20, 20, 20, 20, 20, 20, 20, 20,)

KING = (0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 5, 5, 5, 5, 0, 0,
        0, 0, 5, 10, 10, 5, 0, 0,
        0, 0, 5, 10, 10, 5, 0, 0,
        5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5,
        15, 15, 15, 10, 10, 10, 15, 15,)

PIECES = {
    chess.PAWN: PAWN,
    chess.KNIGHT: KNIGHT,
    chess.BISHOP: BISHOP,
    chess.ROOK: ROOK,
    chess.QUEEN: QUEEN,
    chess.KING: KING,
}

def get_move_static_score(board: chess.Board, move: chess.Move, king_value: int):
    piece = board.piece_at(move.from_square)
    if piece.color == chess.WHITE:
        return (-2 * king_value) + PIECES[piece.piece_type][move.to_square] - PIECES[piece.piece_type][move.from_square]
    return (-2 * king_value) + PIECES[piece.piece_type][move.to_square ^ 56] - PIECES[piece.piece_type][move.from_square ^ 56]
